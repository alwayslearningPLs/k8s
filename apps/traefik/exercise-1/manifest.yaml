---
apiVersion: v1
kind: Namespace
metadata:
  name: test
spec:
---
apiVersion: v1
kind: Service
metadata:
  name: whoami
  namespace: test
  labels:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/part-of: learning-traefik
    app.kubernetes.io/component: service
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: whoami
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whoami
  namespace: test
  labels:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/part-of: learning-traefik
    app.kubernetes.io/component: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: whoami
  template:
    metadata:
      labels:
        app.kubernetes.io/name: whoami
        app.kubernetes.io/part-of: learning-traefik
        app.kubernetes.io/component: web
    spec:
      containers:
        - image: traefik/whoami:latest
          name: whoami
          imagePullPolicy: Always
          env:
          - name: WHOAMI_PORT_NUMBER
            value: '8080'
          - name: WHOAMI_NAME
            value: traefik-learner
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              scheme: HTTP
              port: http
              path: /health
            initialDelaySeconds: 5 
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              scheme: HTTP
              port: http
              path: /health
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
---
apiVersion: v1
kind: Pod
metadata:
  name: tmp-client
  namespace: test
  labels:
    app.kubernetes.io/name: client
    app.kubernetes.io/part-of: learning-traefik
    app.kubernetes.io/component: client
spec:
  containers:
  - name: client
    image: alpine:3.16
    imagePullPolicy: IfNotPresent
    command: ['/bin/sh']
    args: ['-c', 'apk add curl bind-tools; dig whoami.test.svc.cluster.local. SRV; curl http://whoami.test.svc.cluster.local.:8080/ping']
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whoami
  namespace: test
  labels:
    app.kubernetes.io/name: whoami
    app.kubernetes.io/part-of: learning-traefik
    app.kubernetes.io/component: client
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  rules:
  #- host: 
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: whoami
            port:
              number: 8080