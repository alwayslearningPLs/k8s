---
apiVersion: v1
kind: Namespace
metadata:
  name: test-ivan
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo
  namespace: test-ivan
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/part-of: testing
    app.kubernetes.io/component: secret-credentials
    app.kubernetes.io/managed-by: Ivan
type: Opaque
data:
  username: dGVsZXNwYXppbw==
  password: YWJjMTIzLg==
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: test-ivan
  labels:
    app.kubernets.io/name: mongo
    app.kubernetes.io/part-of: testing
    app.kubernetes.io/component: service
    app.kubernetes.io/managed-by: Ivan
spec:
  selector:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/part-of: testing
  type: NodePort
  ports:
  - port: 27017
    targetPort: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-headless
  namespace: test-ivan
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/part-of: testing
    app.kubernetes.io/component: service-headless
    app.kubernetes.io/managed-by: Ivan
spec:
  selector:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/part-of: testing
  clusterIP: None
  ports:
    - port: 27017
      targetPort: mongodb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo
  namespace: test-ivan
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/part-of: testing
    app.kubernetes.io/component: replica-script
    app.kubernetes.io/managed-by: Ivan
data:
  keyfile: $keyFile
  init.sh: |
    #!/bin/sh
    until [ $(mongo "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-2.mongo-headless:27017" --eval='db.runCommand("ping")' | grep -c '{ "ok" : 1 }') -ge 1 ]; do echo "waiting for mongodb to be up and running"; sleep 5s; done
    echo "Initialize ReplicaSet"
    mongo "mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-2.mongo-headless:27017" --eval="printjson(rs.initiate( \
      { \
        '_id': 'rs0', \
        members: [ \
          { '_id': 1, 'host': 'mongo-2.mongo-headless:27017', 'priority': 3 }, \
          { '_id': 2, 'host': 'mongo-1.mongo-headless:27017', 'priority': 2 }, \
          { '_id': 3, 'host': 'mongo-0.mongo-headless:27017', 'priority': 1 } \
        ] \
      }, { force: true })); rs.status();"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: test-ivan
  labels:
    app.kubernetes.io/name: mongo
    app.kubernetes.io/technology: mongodb
    app.kubernetes.io/version: "5"
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: testing
    app.kubernetes.io/managed-by: Ivan
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: mongo
      app.kubernetes.io/technology: mongodb
  replicas: 3
  serviceName: mongo-headless
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongo
        app.kubernetes.io/technology: mongodb
        app.kubernetes.io/version: "5"
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: testing
        app.kubernetes.io/managed-by: Jenkins
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      initContainers:
      - name: entrypoint
        image: alpine:3.16
        imagePullPolicy: IfNotPresent
        command: ['/bin/sh']
        args: ['-c', 'ls -al /data/secret/keyFile && whoami && cp /data/secret/keyFile /tmp/secret/keyFile && chmod 0600 /tmp/secret/keyFile && chown 999:999 /tmp/secret/keyFile && cat /tmp/secret/keyFile']
        volumeMounts:
        - name: keyfile
          mountPath: /data/secret/keyFile
          subPath: keyFile
        - name: keyfile-helper
          mountPath: /tmp/secret
        securityContext:
          runAsUser: 0
          privileged: true
      containers:
      - name: mongo
        image: mongo:5.0.14
        imagePullPolicy: IfNotPresent
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo
              key: password
        args: ['mongod', '--replSet', 'rs0', '--keyFile', '/data/secret/keyFile', '--bind_ip_all']
        volumeMounts:
        - name: keyfile-helper
          mountPath: /data/secret
        ports:
        - name: mongodb
          containerPort: 27017
          protocol: TCP
        livenessProbe:
          exec:
            command: ['mongo', '--eval', 'db.adminCommand("ping")']
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command: ['mongo', '--eval', 'db.adminCommand("ping")']
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
      volumes:
      - name: keyfile
        configMap:
          name: mongo
          items:
          - key: keyfile
            mode: 0600
            path: keyFile
      - name: keyfile-helper
        emptyDir: {}
---
apiVersion: v1
kind: Pod
metadata:
  name: mongo-client
  namespace: test-ivan
  labels:
    app.kubernetes.io/name: mongo-client
    app.kubernetes.io/part-of: testing
spec:
  restartPolicy: OnFailure
  containers:
  - name: mongo-client
    image: alpine:3.16
    imagePullPolicy: IfNotPresent
    env:
    - name: MONGO_INITDB_ROOT_USERNAME
      valueFrom:
        secretKeyRef:
          name: mongo
          key: username
    - name: MONGO_INITDB_ROOT_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mongo
          key: password
    volumeMounts:
    - name: initreplica
      mountPath: /tmp/entrypoint.sh
      subPath: entrypoint.sh
    tty: true
    command: ['/bin/sh']
    args: ['-c', 'echo -e "https://dl-cdn.alpinelinux.org/alpine/v3.9/main\nhttps://dl-cdn.alpinelinux.org/alpine/v3.9/community\n" >> /etc/apk/repositories; apk add mongodb mongodb-tools jq curl bind-tools; ./tmp/entrypoint.sh']
  volumes:
  - name: initreplica
    configMap:
      name: mongo
      items:
      - key: init.sh
        path: entrypoint.sh
        mode: 0755
