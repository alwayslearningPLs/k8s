---
apiVersion: v1
kind: Namespace
metadata:
  name: test
spec:
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: app1
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: app1-viewer
  namespace: test
rules:
  - apiGroups: [""]
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - watch
    # - impersonate # This verb is not really need to execute any of the two operations (can-i and get pods).
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: app1-binding
  namespace: test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: app1-viewer
subjects:
- kind: ServiceAccount
  name: app1
  namespace: test
---
apiVersion: v1
kind: Pod
metadata:
  name: app1
  namespace: test
  labels:
    app.kubernetes.io/name: app1
    app.kubernetes.io/part-of: rbac
    app.kubernetes.io/component: client
spec:
  containers:
  - name: client
    image: alpine:3.16
    imagePullPolicy: IfNotPresent
    command: ['bin/sh']
    args: ['-c', 'while true; do sleep 1000s; done']
    tty: true
    stdin: true
